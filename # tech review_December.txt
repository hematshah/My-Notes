# tech review


stream
encoding
Task 
serialize
process .exe running , .dll library, .exe runs
application user INITIATED (After LOGIN)
Service   Computer Initiated(startup)
Thread set of instructions sent as a block into CPU 
Task C# neat implemetation of Threading
Task<T> Task which resurns data OF TYPE <t>
Task<T>.result   Obtaining this data output by a task

types of streaming
  Binary     [1010101010101010101010101]  1 block (buffer c# 1024 bytes)
             [1010101010101010101010101]
             [1010101010101010101010101]
             var buffer = new [1024]
             Database: raw binary like this -DATA TYPE IS BLOB =>  BINARY LARGE OBJECT
  Character

  buffer: block of data
  cache : temporary store (local machine eg partial)



  API  Aplication Programming Interfaces : GET DATA FROM WEB
  http request
       GET  => domain.com?x=1; y=2;data=hello
       POST => data in JSON {} of HTTP Resquest
  http response

JSON
BOOTSTRAP
ASP: 
MVC
BLAZOR : c# in browser (Webassembly)
RAZOR  C# inside HTML @....
DELEGATE : placeholders for methods
EVENT: ability to reponds to exteernal interaactions a) User initiated b) Data INITAIATED
Sync  
Async MAIN THREAD : CALLS SUB THREAD(TASK) TO DO WORK 
Async..Await
ASCII : American Standard Code for Information Interchange, 
Proxy
UTF8: 8-bit = simple US english ASCII
UTF16 UNICODE = Special characters (symbols)
XML <root><row field = "value">data</row></root>
